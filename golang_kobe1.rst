========================================================
Go言語勉強会 [1/31(火) 19:00～21:00 神戸情報大学院大学]
========================================================


Go言語の勉強会を行います。

GAEでも使えるGo言語ですが、近々Go言語バージョン１がリリースされます。今回は『A Tour of Go』( http://tour.golang.org/ ) を @atotto さんが訳された（感謝）日本語訳阪 （ http://go-tour-jp.appspot.com/ ）を解説を交えて時間内に出来るところまでになると思います。 

小規模の勉強会なので会社帰りに気軽に参加してください。

下記フォームから申し込みしていただければ参加登録完了です。（返信メールはありません。）

   :日時: 2012年1月31日 火曜日 19:00〜21:00
   :参加人数: 20名

**アジェンダ**

::

   19:00～19:05     KIC様のご紹介
   19:05～19:15     神戸GTUGのご紹介
   19:15～19:30     自己紹介タイム
   19:30～20:00     Go言語とは
   20:00～20:55     Go言語の旅に出よう『A Tour of Go』 
   20:55～21:00     お片づけ

**場所**

::

   神戸情報大学院大学
   〒650-0001 神戸市中央区加納町2-2-7
   http://www.kic.ac.jp/access/index.html

**注意事項

Webブラウザの動くノートPC（Mac，Linux，Windows）とネット接続環境をご用意ください。

**参加想定スキル**

Go言語に対する興味があること。

**その他**

勉強会への質問は神戸GTUGのMLでお願いします。

https://groups.google.com/group/kobe-gtug/

当日
=============

19:00-

11名(1名途中から)

2012年度 第3回神戸GTUG弁協会

神戸GTUGについて

2012年、神戸GTUGの目標


    * GTUGが紹介されること


神戸情報大学院大学
会場提供

Go言語とは
============

**キーワード**

   * ポインタ
   * Pascal風の宣言構文
   * ダックタイピング
   * スライス等の参照型
   * 並列処理

**Goの実行環境**

   * ブラウザでもお試しでできるよ
   * 開発環境
   * GAE環境

**資料など**

   * http://go-tour-jp.appspot.com/
   * 全部で70程度
   * 暗黙の型変換は無い
      * 「キャスト」ではなく「コンバート」と呼びます。

   * IEで動かない疑惑

**最初の最初**



.. code-block:: none

   package main
   
   import "fmt"
   
   func main() {
       fmt.Println("Hello, blender")
   }


Packages

   * プログラムは mainパッケージ内で実行を開始
   * ルールとして、パッケージの名前はインポートパスの最後の単語と同じです。

Exported names

   * 大文字 と 小文字
   * Go言語のファイルはUTF-8で保存。 変数名に日本語も…

Functions

   * 型は後に書くのねー
   * 複数の変数を返すことが可能
   * result parameters

Variables

   * もし初期化子が指定されている場合、型を省略することができます。
   * ``:=`` で ``Var`` を省略することができます。

Constants


Numeric Constants


For

If

   * K&R スタイルで中カッコ書きましょう！
   * if 文の中で初期化宣言できる


Basic types

   * bool
   * string
   * int ...
   * uint ...
   * float32 ...
   * complex64 (複素数)

Structs

   * クラスはありません
   * 構造体内の変数は「フィールド」と呼びます

Pointers

   * Go言語にはポインタがありますが、ポインタ演算はありません。 


Struct Literals



The new function

Maps

   * ``make`` 宣言がなにげに大事
   * mapは、使用する前にmake(newではありません)で作成する必要があります。 nilのmapは空であり、割り当てることはできません。


Slices

   * ちなみに、配列の宣言は ``var a [10] int``
   * s[lo:hi]

次回は

**32番までいったよ**


