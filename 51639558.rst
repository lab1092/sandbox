========================================================
メモ：Windowsでsphinxからpdf作ってみよう
========================================================

   :URL: http://blog.livedoor.jp/lab1092/archives/51639558.html


とりあえずWindows環境でやったことメモ。

もとにしたのは「rst2pdf拡張を使ったPDFファイル作成」。
ありがたく使わせていただきまする。

   http://sphinx-users.jp/cookbook/pdf/rst2pdf.html

もっとも、既にWindows環境で対応されている方はいらっしゃると思うので、それを探し出せない感が漂ってたり。

なお、python 2.6.1 と sphinx-1.0.7 はインストール済み。

１．rst2pdfのインストール
-------------------------------

easy_install でらくらくインストール。
(実は「らくらくインストール」でない環境が他にひとつあって、どうしようか悩んでたりｗ)

２．日本語フォントのインストール
-------------------------------


VLゴとIPAフォントを調達(IPAフォントは*.ttfのもの)
→c:usronts に*.ttfをコピー


３．プロジェクトの作成
-------------------------------

sphinx-quickstart コマンドを使ってドキュメントのプロジェクトフォルダの環境を設定
→OK


４．PDFの設定を追加
-------------------------------

conf.py にPDF用の設定を自分で書き加える
→コピペしました。
→フォントの設定は pdf_font_path = ['c:\\usr\\fonts']

次に、PDFの設定を追加します。
→コピペしました。


５．コマンドの追加
-------------------------------

→Makeファイルのターゲット(pdf:)コピペしました。

バッチファイルも書き換えたよ。

.. code-block :: bat

   if "%1" == "pdf" (
    %SPHINXBUILD% -b pdf %ALLSPHINXOPTS% %BUILDDIR%/pdf
       if errorlevel 1 exit /b 1
       echo.
       echo.Testing of pdf in the sources finished, look at the ^
   results in %BUILDDIR%/pdf/output.txt.
       goto end


スタイルシートの設定

"ja.json"ファイルをコピペ。

６．ビルドと確認
-------------------------------

フォント(VLゴ）のところで何かエラーっぽいけど気にしない
→http://www.slideshare.net/lab1092/my-project-7250596

フォントのエラーは出ているものの、PDFの出力までいけました。

.. code-block :: none

   writing MyProject... [ERROR] styles.py:308 Error processing font VL-Gothic-Regul
   ar: too many values to unpack
   [ERROR] styles.py:309 Registering VL-Gothic-Regular.ttf as Helvetica alias
   done

７．バッチファイル
-------------------------------

２つ作成。ファイルアイコンをダブルクリックでコンパイル→ファイルを開く、ための2行x2。プロジェクトフォルダに。

[make-html.bat]

.. code-block :: bat

   call make html
   start _build/html/index.html

[make-pdf.bat]

.. code-block :: bat

   call make pdf
   start _build/pdf/MyProject.pdf



[コマンドラインログ]

.. code-block :: none

   C:\Users\manda>easy_install rst2pdf
   Searching for rst2pdf
   Reading http://pypi.python.org/simple/rst2pdf/
   Reading http://rst2pdf.googlecode.com
   Reading http://code.google.com/p/rst2pdf/downloads/list
   Best match: rst2pdf 0.16
   Downloading http://rst2pdf.googlecode.com/files/rst2pdf-0.16.tar.gz
   Processing rst2pdf-0.16.tar.gz
   Running rst2pdf-0.16setup.py -q bdist_egg --dist-dir c:\users\manda\appdata\loc
   al empeasy_install-jzfuss st2pdf-0.16egg-dist-tmp-ealu0h
   zip_safe flag not set; analyzing archive contents...
   rst2pdf.createpdf: module references __file__
   rst2pdf.image: module references __file__
   rst2pdf.pdfbuilder: module references __file__
   rst2pdf.styles: module references __file__
   rst2pdf.tests.autotest: module references __file__
   rst2pdf.tests.execmgr: module references __file__
   Adding rst2pdf 0.16 to easy-install.pth file
   Installing rst2pdf-script.py script to C:\Python26\Scripts
   Installing rst2pdf.exe script to C:Python26Scripts
   Installing rst2pdf.exe.manifest script to C:\Python26\Scripts
   
   Installed c:\python26\lib\site-packages st2pdf-0.16-py2.6.egg
   Processing dependencies for rst2pdf
   Searching for reportlab>=2.1
   Reading http://pypi.python.org/simple/reportlab/
   Reading http://www.reportlab.com/
   Best match: reportlab 2.5
   Downloading http://pypi.python.org/packages/2.6/r/reportlab/reportlab-2.5.win32-
   py2.6.exe#md5=4ce6342f3264507a59b33d20dd819471
   Processing reportlab-2.5.win32-py2.6.exe
   reportlab.rl_config: module references __file__
   reportlab.__init__: module references __file__
   reportlab.lib.fontfinder: module references __file__
   reportlab.lib.testutils: module references __path__
   reportlab.lib.utils: module references __file__
   reportlab.lib.utils: module references __path__
   reportlab.pdfgen.pdfimages: module references __file__
   creating 'c:\users\manda\appdata\local empeasy_install-su9hv8 eportlab-2.5-py
   2.6-win32.egg' and adding 'c:\users\manda\appdata\local empeasy_install-su9hv8
   eportlab-2.5-py2.6-win32.egg.tmp' to it
   creating c:\python26\lib\site-packages eportlab-2.5-py2.6-win32.egg
   Extracting reportlab-2.5-py2.6-win32.egg to c:\python26\lib\site-packages
   Adding reportlab 2.5 to easy-install.pth file
   
   Installed c:\python26\lib\site-packages eportlab-2.5-py2.6-win32.egg
   Finished processing dependencies for rst2pdf
   
   C:\Users\manda>easy_install sphinx
   Searching for sphinx
   Best match: sphinx 1.0.7
   Processing sphinx-1.0.7-py2.6.egg
   sphinx 1.0.7 is already the active version in easy-install.pth
   Installing sphinx-build-script.py script to C:\Python26\Scripts
   Installing sphinx-build.exe script to C:\Python26\Scripts
   Installing sphinx-build.exe.manifest script to C:\Python26\Scripts
   Installing sphinx-quickstart-script.py script to C:\Python26\Scripts
   Installing sphinx-quickstart.exe script to C:\Python26\Scripts
   Installing sphinx-quickstart.exe.manifest script to C:\Python26\Scripts
   Installing sphinx-autogen-script.py script to C:\Python26\Scripts
   Installing sphinx-autogen.exe script to C:\Python26\Scripts
   Installing sphinx-autogen.exe.manifest script to C:\Python26\Scripts
   
   Using c:\python26\lib\site-packages\sphinx-1.0.7-py2.6.egg
   Processing dependencies for sphinx
   Finished processing dependencies for sphinx
   
   C:\Users\manda>cd C:\usr\Proj\sphinx_sample

   C:\usr\Proj\sphinx_sample>dir
    ドライブ C のボリューム ラベルは HP です
    ボリューム シリアル番号は D2D5-372C です
   
    C:\usr\Proj\sphinx_sample のディレクトリ
   
   2011/03/14  01:24    <DIR>          .
   2011/03/14  01:24    <DIR>          ..
                  0 個のファイル                   0 バイト
                  2 個のディレクトリ  1,543,194,304,512 バイトの空き領域
   
   C:\usr\Proj\sphinx_sample>sphinx-quickstart
   Welcome to the Sphinx 1.0.7 quickstart utility.
   
   Please enter values for the following settings (just press Enter to
   accept a default value, if one is given in brackets).
   
   Enter the root path for documentation.
   > Root path for the documentation [.]:
   
   You have two options for placing the build directory for Sphinx output.
   Either, you use a directory "_build" within the root path, or you separate
   "source" and "build" directories within the root path.
   > Separate source and build directories (y/N) [n]:
   
   Inside the root directory, two more directories will be created; "_templates"
   for custom HTML templates and "_static" for custom stylesheets and other static
   files. You can enter another prefix (such as ".") to replace the underscore.
   > Name prefix for templates and static dir [_]:
   
   The project name will occur in several places in the built documentation.
   > Project name: sphinx_sample
   > Author name(s): ss
   
   Sphinx has the notion of a "version" and a "release" for the
   software. Each version can have multiple releases. For example, for
   Python the version is something like 2.5 or 3.0, while the release is
   something like 2.5.1 or 3.0a1.  If you don't need this dual structure,
   just set both to the same value.
   > Project version: 1
   > Project release [1]:
   
   The file name suffix for source files. Commonly, this is either ".txt"
   or ".rst".  Only files with this suffix are considered documents.
   > Source file suffix [.rst]:
   
   One document is special in that it is considered the top node of the
   "contents tree", that is, it is the root of the hierarchical structure
   of the documents. Normally, this is "index", but if your "index"
   document is a custom template, you can also set this to another filename.
   > Name of your master document (without suffix) [index]:
   
   Sphinx can also add configuration for epub output:
   > Do you want to use the epub builder (y/N) [n]:
   
   Please indicate if you want to use one of the following Sphinx extensions:
   > autodoc: automatically insert docstrings from modules (y/N) [n]:
   > doctest: automatically test code snippets in doctest blocks (y/N) [n]:
   > intersphinx: link between Sphinx documentation of different projects (y/N) [n]
   :
   > todo: write "todo" entries that can be shown or hidden on build (y/N) [n]:
   > coverage: checks for documentation coverage (y/N) [n]:
   > pngmath: include math, rendered as PNG images (y/N) [n]:
   > jsmath: include math, rendered in the browser by JSMath (y/N) [n]:
   > ifconfig: conditional inclusion of content based on config values (y/N) [n]:
   > viewcode: include links to the source code of documented Python objects (y/N)
   [n]:
   
   A Makefile and a Windows command file can be generated for you so that you
   only have to run e.g. `make html' instead of invoking sphinx-build
   directly.
   > Create Makefile? (Y/n) [y]:
   > Create Windows command file? (Y/n) [y]:
   
   Finished: An initial directory structure has been created.
   
   You should now populate your master file .index.rst and create other documentat
   ion
   source files. Use the Makefile to build the docs, like so:
      make builder
   where "builder" is one of the supported builders, e.g. html, latex or linkcheck.
   
   
   
   C:\usr\Proj\sphinx_sample>make pdf
   Running Sphinx v1.0.7
   loading pickled environment... done
   building [pdf]: targets for 1 source files that are out of date
   updating environment: 0 added, 0 changed, 0 removed
   looking for now-outdated files... none found
   processing MyProject... index
   resolving references...
   done
   writing MyProject... [ERROR] styles.py:308 Error processing font VL-Gothic-Regul
   ar: too many values to unpack
   [ERROR] styles.py:309 Registering VL-Gothic-Regular.ttf as Helvetica alias
   done
   build succeeded.
   
   Testing of pdf in the sources finished, look at the results in _build/pdf/output
   .txt.

   C:\usr\Proj\sphinx_sample>


